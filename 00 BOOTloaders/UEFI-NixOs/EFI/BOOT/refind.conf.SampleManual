#
# refind.conf
# Пример и описание конфигурационного файла для меню загрузки rEFInd
#

# Тайм-аут в секундах для экрана главного меню. Установка тайм-аута в 0 отключает автоматическую загрузку (т. е. тайм-аут отсутствует). Установка значения -1 приводит к немедленной загрузке в ОС по умолчанию *НЕ ИСКЛЮЧАЯ* нажатия клавиш в буфере при запуске rEFInd, в этом случае нажатие клавиш интерпретируется как клавиша быстрого доступа. Если подходящий ярлык не найден, rEFInd отображает свое меню без таймаута.
#
  timeout 20

# Установка уровня протоколирования. Если установлено значение 0, rEFInd не ведет журнал своих действий. При значении 1 или выше rEFInd создает файл refind.log в своем домашнем каталоге на ESP и записывает информацию о том, что он делает. При больших значениях записывается больше информации, вплоть до максимального значения 4. Этот маркер следует оставить по умолчанию равным 0, за исключением случаев отладки проблем. 
# Значение по умолчанию - 0
#
# log_level 1

# Обычно по истечении тайм-аута rEFInd загружает выбор_по_умолчанию. Однако если следующий параметр не закомментирован, rEFInd вместо этого попытается выключить компьютер. ВНИМАНИЕ: МНОГИЕ КОМПЬЮТЕРЫ ВМЕСТО ЭТОГО ЗАВИСАЮТ ИЛИ ПЕРЕЗАГРУЖАЮТСЯ! Mac и более современные ПК на базе UEFI, скорее всего, будут работать с этой функцией. 
# Значение по умолчанию - true
#
# shutdown_after_timeout

# Хранить ли специфические переменные rEFInd в NVRAM (1, true, или on) или в файлах в подкаталоге "vars" каталога rEFInd на диске (0, false, или off). Использование NVRAM хорошо работает на большинстве компьютеров; однако это увеличивает износ NVRAM материнской платы, а если EFI глючит или NVRAM старая и изношенная, то может вообще не работать. Хранение переменных на диске - приемлемая альтернатива в таких случаях если вы хотите минимизировать износ NVRAM; однако она не будет работать, если rEFInd хранится на файловой системе, доступной EFI только для чтения (например, на томе HFS+), и увеличивает риск повреждения файловой системы. Обратите внимание, что эта опция влияет ТОЛЬКО на собственные переменные rEFInd, такие как переменные PreviousBoot, HiddenTags, HiddenTools и HiddenLegacy. Она НЕ влияет на Secure Boot или другие переменные, не относящиеся к rEFInd. 
# По умолчанию - true
#
  use_nvram false

# Таймаут заставки; экран пустеет через указанное количество секунд при отсутствии ввода с клавиатуры. Экран возвращается после большинства нажатий клавиш (к сожалению, не включая клавиши-модификаторы, такие как Shift, Control, Alt или Option). Установка значения "-1" приводит к тому, что rEFInd запускается с активной заставкой. 
# По умолчанию установлено значение 0, которое отключает заставку.
#
# screensaver 300

# Скрытие элементов пользовательского интерфейса по личным предпочтениям или для повышения безопасности:
#
#  banner       - заглавный баннер rEFInd (встроенный или загружаемый через "banner") 
#  label        - текстовая метка опции загрузки в меню 
#  singleuser   - удалить опции подменю для загрузки macOS в однопользовательском или verbose режимах; влияет ТОЛЬКО на macOS 
#  safemode     - удаление опции подменю для загрузки macOS в "безопасном режиме" 
#  hwtest       - опция подменю для запуска аппаратного теста Apple 
#  arrows       - стрелки прокрутки на строке тегов выбора ОС 
#  hints        - краткое описание команды 
#  editor       - опции редактора (+, F2 или Insert в меню опций загрузки) 
#  badges       - значки типа устройства для опций загрузки 
#  all          - все вышеперечисленное 
# 
#  По умолчанию - ни одно из этих (все элементы активны)
#
# hideui singleuser
# hideui all

# Задайте имя подкаталога, в котором хранятся иконки. Иконки должны иметь те же имена, что и в стандартном каталоге. Имя каталога указывается относительно основного каталога бинарного файла rEFInd. Если иконка не найдена в указанном каталоге, будет сделана попытка загрузить ее из каталога по умолчанию; таким образом, вы можете заменить только некоторые иконки в своем каталоге и полагаться на каталог по умолчанию для других. Файлы иконок могут быть в любом поддерживаемом формате - ICNS (*.icns), BMP (*.bmp), PNG (*.png) или JPEG (*.jpg или *.jpeg); однако реализации BMP и JPEG в rEFInd не поддерживают прозрачность, которая очень желательна в иконках. 
# По умолчанию используется значение "icons".
#
# icons_dir myicons
# icons_dir icons/snowy

# Вместо иконки и названия rEFInd используйте собственный баннер с заголовком. Путь к файлу указан относительно директории, в которой находится refind.efi. Цвет в левом верхнем углу изображения используется в качестве цвета фона для экранов меню. В настоящее время поддерживаются несжатые изображения BMP с глубиной цвета 24, 8, 4 или 1 бит, а также изображения PNG и JPEG. (Можно использовать и ICNS-изображения, но ICNS имеет ограничения, которые делают его неудачным выбором для этой цели). Поддержка PNG и JPEG ограничена базовыми библиотеками; некоторые файлы, например прогрессивные JPEG, не будут работать.
#
# banner hostname.bmp
# banner mybanner.jpg
# banner icons/snowy/banner-snowy.png

# Укажите, как обрабатывать баннеры, размер которых не совпадает с размером экрана: 
#  noscale     - Обрезать, если слишком большой, показать с рамкой, если слишком маленький
#  fillscreen  - Заполнить экран По умолчанию
# По умолчанию - noscale
#
# banner_scale fillscreen

# Размеры иконок. Все значки квадратные, поэтому указывается только одно значение. Большие значки используются для селекторов ОС в первом ряду, а маленькие - для инструментов во втором ряду. Значки типа "диск" имеют размер 1/4 от размера больших значков. Допустимые значения - 32 и выше. Если в файлах значков нет значков нужного размера, значки масштабируются до указанного размера. По умолчанию используются значения 48 и 128 для маленьких и больших значков соответственно.
#
# small_icon_size 96
# big_icon_size 256

# Выбор пользовательских изображений для фона. Есть большое (144 x 144) для значков ОС и маленькое (64 x 64) для значков функций во втором ряду. Если задано только маленькое изображение, оно также используется для больших значков, растягиваясь посередине. Если указано только большое изображение, то для маленьких значков будет использоваться встроенное изображение по умолчанию. Если указано изображение, отличное от оптимального размера, оно будет масштабировано некрасивым образом.
#
# Как и в случае с баннером, эти опции принимают имя файла несжатого изображения формата BMP, PNG, JPEG или ICNS с глубиной цвета 24, 8, 4 или 1 бит. Формат PNG или ICNS необходим, если вам нужна поддержка прозрачности (чтобы позволить вам "видеть сквозь" полноэкранный баннер).
#
# selection_big   selection-big.bmp
# selection_small selection-small.bmp

# Установите шрифт, который будет использоваться для всех текстовых отображений в графическом режиме. Для достижения наилучших результатов шрифт должен быть PNG-файлом с прозрачностью альфа-канала. Он должен содержать ASCII-символы 32-126 (от пробела до тильды) включительно, а также глиф, который будет отображаться на месте символов, выходящих за пределы этого диапазона, всего 96 глифов. Поддерживаются только моношрифты. Шрифты могут быть любого размера, хотя большие шрифты могут вызывать неравномерность отображения. 
# По умолчанию используется встроенный в rEFInd шрифт Luxi Mono Regular 12 пунктов.
#
# font myfont.png

# Использовать только текстовый режим. Если эта опция включена, то rEFInd переходит в текстовый режим. Если передать этой опции значение "0", то будет использоваться графический режим. Передача ей значения "нет" или любого другого, отличного от "0", приводит к использованию текстового режима. По умолчанию используется графический режим.
#
# textonly

# Установите текстовый режим EFI, который будет использоваться для текстовых дисплеев. Эта опция принимает одну цифру, обозначающую номер режима. Режим 0 - это обычно 80x25, 1 - иногда 80x50, а более высокие номера - это режимы, специфичные для системы. Режим 1024 - это специальный код, который указывает rEFInd не устанавливать текстовый режим; используется тот, который был на момент запуска программы. Если вы укажете недопустимый режим, rEFInd сделает паузу во время загрузки, чтобы сообщить вам о допустимых режимах. 
# ВНИМАНИЕ: В VirtualBox и, возможно, на некоторых реальных компьютерах, указание текстового режима и разкомментирование опции "textonly" без указания разрешения может привести к непригодному для использования дисплею в загружаемой ОС. 
# По умолчанию - 1024 (без изменений)
#
# textmode 2

# Установите разрешение видео на экране. Передайте этому параметру одно из следующих значений:  
#  * два целых значения, соответствующих разрешениям по X и Y 
#  * одно целое значение, соответствующее видеорежиму GOP (UEFI) 
#  * строка "max", задающая максимальное доступное разрешение 
# Обратите внимание, что поддерживаются не все разрешения. В системах UEFI передача неверного значения приводит к появлению на экране соответствующего сообщения, а также списка поддерживаемых режимов. В системах EFI 1.x (например, Macintoshes) установка неправильного режима приводит к молчаливому отказу. В системах обоих типов установка неправильного разрешения приводит к использованию разрешения по умолчанию. Разрешение 1024x768 обычно работает, но более высокие значения часто не работают. 
# По умолчанию "0 0" (используется разрешение системы по умолчанию, обычно 800x600).
#
# resolution 1024 768
# resolution 1440 900
# resolution 3
# resolution max

# Включить поддержку сенсорного экрана. Если эта функция активна, она позволяет использовать сенсорные экраны (как на планшетах). Однако обратите внимание, что не все EFI планшетов обеспечивают необходимую базовую поддержку, поэтому эта функция может не работать. Если она работает, вы сможете запустить ОС или инструмент, прикоснувшись к нему. В подменю прикосновение к любому месту запускает выбранный в данный момент пункт; в настоящее время нет возможности выбрать конкретный пункт подменю. Эта функция является взаимоисключающей с функцией enable_mouse. Если обе функции не закомментированы, приоритет имеет та, которая была прочитана последней.
#
# enable_touch

# Включить поддержку мыши. Если эта функция активна, она позволяет использовать мышь компьютера. Однако обратите внимание, что не все EFI компьютеров обеспечивают необходимую базовую поддержку, поэтому эта функция может не работать. Если она работает, вы сможете запустить ОС или инструмент, щелкнув по нему указателем мыши. Эта функция является взаимоисключающей с функцией enable_touch. Если обе функции не закомментированы, приоритет имеет та, которая была прочитана последней.
#
# enable_mouse

# Размер указателя мыши, в пикселях, на сторону. 
# По умолчанию 16
#
# mouse_size 16

# Скорость отслеживания мыши. Большие числа означают более быстрое перемещение мыши. Эта опция требует, чтобы параметр enable_mouse не был закомментирован. 
# Возможные значения - от 1 до 32. По умолчанию - 4.
#
# mouse_speed 4

# Запуск указанных ОС в графическом режиме. По умолчанию при запуске всех ОС, кроме macOS, rEFInd переключается в текстовый режим и отображает основную информацию перед запуском. Использование графического режима обеспечивает более плавный переход, но не отображает никакой информации, что может усложнить задачу при отладке проблемы. Кроме того, по крайней мере на одном известном компьютере использование графического режима предотвращает сбой при использовании загрузчика EFI-заглушки ядра Linux. Вы можете указать пустой список, чтобы загрузить все ОС в текстовом режиме.
# Возможные варианты:
#   osx     - macOS
#   linux   - Ядро Linux с загрузчиком заглушки EFI
#   elilo   - Загрузчик ELILO
#   grub    - Загрузчик GRUB (Legacy или 2)
#   windows - Microsoft Windows
# Значение по умолчанию: osx
#
# use_graphics_for osx,linux

# Какие инструменты показывать в строке инструментов и в каком порядке: 
# order to display them:
#  shell            - оболочка EFI (требует внешней программы; см.документациюrEFInd) 
#  memtest          - программа memtest86, в EFI/tools, EFI/memtest86, EFI/memtest, EFI/tools/memtest86 или EFI/tools/memtest 
#  gptsync          - (опасная) gptsync.efi (требуется внешняяпрограмма; подробности см. в документации rEFInd) 
#  gdisk            - программа разметки gdisk 
#  apple_recovery   - загрузка раздела Apple Recovery HD, если присутствует 
#  windows_recovery - загрузка OEM-инструмента восстановления Windows, если присутствует (см. также опцию windows_recovery_files) 
#  mok_tool         - делает доступныминструментобслуживания ключей владельца машины (MOK), MokManager.efi, используется в системах Secure Boot 
#  csr_rotate       - настраиваетполитикуApple System Integrity Protection (SIP). Требует установки параметра "csr_values".
#  install          - опция установки rEFInd из текущего места в другое место ESP 
#  bootorder        - настройка порядка загрузки EFI (НЕ rEFInd) 
#  about            - опция "about this program" 
#  hidden_tags      - управление скрытыми тегами 
#  exit             - тег для выхода из rEFInd 
#  shutdown         - компьютер (ошибка приводит к перезагрузке многих UEFI-систем) 
#  reboot           - тег для перезагрузки компьютера 
#  firmware         - тег для перезагрузки компьютера впользовательский интерфейспрошивки (игнорируется на старых компьютерах) 
#  fwupdate         - тег для обновления прошивки; запускает программу fwupx64.efi (или аналогичную) программу 
#  netboot          - запуск инструмента ipxe.efi для сетевой (PXE) загрузки 
# По умолчанию: shell,memtest,gdisk,apple_recovery,windows_recovery,mok_tool,about,hidden_tags,shutdown,reboot,firmware,fwupdate Чтобы полностью отключить сканирование всех инструментов, укажите строку showtools без параметров.
#
# showtools shell, bootorder, gdisk, memtest, mok_tool, apple_recovery, windows_recovery, about, hidden_tags, reboot, exit, firmware, fwupdate

# Исключение двоичных файлов инструментов из строки инструментов, даже если в showtools указан общий класс. Это позволяет обрезать избыток инструментов, например, когда вы видите множество записей mok_tool после установки нескольких дистрибутивов Linux. Как и в dont_scan_files, вы можете указать только имя файла, полное имя пути или идентификатор тома (метка файловой системы, имя раздела или GUID раздела) и полное имя пути. 
# По умолчанию - пустой список (ничего не исключается)
#
# dont_scan_tools ESP2:/EFI/ubuntu/mmx64.efi,gptsync_x64.efi

# Загрузочные загрузчики, которые могут запускать восстановление Windows или аварийную систему. Как правило, они зависят от производителя оборудования. 
# По умолчанию используется LRS_ESP:/EFI/Microsoft/Boot/LrsBootmgr.efi
#
# windows_recovery_files LRS_ESP:/EFI/Microsoft/Boot/LrsBootmgr.efi

# Каталоги, в которых следует искать драйверы EFI. Эти драйверы могут обеспечивать поддержку файловой системы, предоставлять доступ к жестким дискам подключаемых контроллеров и т. д. В большинстве случаев они не нужны, но если вы добавляете драйверы EFI и хотите, чтобы rEFInd автоматически загружал их, укажите здесь один или несколько путей. rEFInd всегда сканирует подкаталоги "drivers" и "drivers_{arch}" своего собственного каталога установки (где "{arch}" - код вашей архитектуры); эта опция указывает ДОПОЛНИТЕЛЬНЫЕ каталоги для сканирования. 
# По умолчанию дополнительные каталоги для EFI-драйверов не сканируются.
#
# scan_driver_dirs EFI/tools/drivers,drivers

# Какие типы загрузчиков искать и в каком порядке их отображать: 
#  internal      - внутренние дисковые загрузчики EFI 
#  external      - внешние дисковые загрузчики EFI 
#  optical       - оптические диски EFI (CD, DVD и т. д.) 
#  netboot       - сетевые (PXE) варианты загрузки EFI 
#  hdbios        - дисковые загрузчики BIOS 
#  biosexternal  - внешние загрузчики BIOS (USB, eSATA и т. д.) 
#  cd            - загрузчики BIOS на основе оптических дисков 
#  manual        - использовать строфы, приведенные ниже в этом файле конфигурации 
#  firmware      - загружать программы EFI, установленные в NVRAM прошивки 
# Обратите внимание, что опции устаревшего BIOS требуют поддержки прошивки, которая присутствует не на всех компьютерах. Опция netboot является экспериментальной и полагается на программные файлы ipxe.efi и ipxe_discover.efi. На ПК с UEFI по умолчанию: внутренний, внешний, оптический, ручной На компьютерах Mac по умолчанию: внутренний, hdbios, внешний, biosexternal, оптический, cd, ручной
#
# scanfor internal,external,optical,manual,firmware

# По умолчанию rEFInd полагается на встроенное ПО UEFI для обнаружения загрузочных устройств в режиме BIOS. Однако иногда это не позволяет обнаружить все доступные устройства. В этих случаях uefi_deep_legacy_scan приводит к принудительному сканированию и изменению переменных NVRAM при каждой загрузке. Добавление "0", "off" или "false" возвращает значение по умолчанию. Этот маркер не влияет на компьютеры Mac или если через scanfor не заданы параметры режима BIOS. 
# По умолчанию значение не установлено (или "uefi_deep_legacy_scan false").
#
# uefi_deep_legacy_scan

# Задержка на указанное количество секунд перед сканированием дисков. Это может помочь некоторым пользователям, которые обнаруживают, что некоторые диски (обычно внешние или оптические) не обнаруживаются изначально, но обнаруживаются после нажатия Esc. 
# По умолчанию установлено значение 0.
#
# scan_delay 5

# При сканировании томов на наличие EFI-загрузчиков rEFInd всегда ищет загрузчики macOS и Microsoft Windows в их обычных местах, а также сканирует корневой каталог и все подкаталоги каталога /EFI на наличие дополнительных загрузчиков, но не обращается к этим каталогам. Маркер also_scan_dirs добавляет дополнительные каталоги в список сканирования. Каталоги указываются относительно корневого каталога тома. Эта опция применяется ко ВСЕМ томам, которые сканирует rEFInd, за исключением случаев, когда вы указываете имя тома и двоеточие перед именем каталога, как в "myvol:/somedir" для сканирования каталога somedir только в файловой системе с именем myvol. Если указанный каталог не существует, он игнорируется (не возникает условия ошибки). Символ "+" означает добавление к списку сканируемых каталогов, а не перезапись этого списка. По умолчанию сканируются каталоги "boot" и "@/boot" в дополнение к различным жестко заданным каталогам.
#
# also_scan_dirs boot,ESP2:EFI/linux/kernels
# also_scan_dirs boot,@/boot
# also_scan_dirs +,@/kernels

# Разделы (или целые диски, для загрузки в legacy-режиме), которые нужно исключить из сканирования. Для сканирования в режиме EFI вы обычно указываете том по его метке, которую можно получить в оболочке EFI, набрав "vol", в Linux, набрав "blkid /dev/{devicename}", или изучив метку диска в файловых браузерах различных ОС. Также можно идентифицировать раздел по его уникальному GUID (он же "PARTUUID" в языке Linux). (Обратите внимание, что это НЕ GUID TYPE CODE раздела.) Этот идентификатор можно получить с помощью команды "blkid" в Linux или "diskutil info {partition-id}" в macOS. Для сканирования в устаревшем режиме можно указать любое подмножество описания загрузчика, отображаемое при выделении опции в rEFInd. 
# По умолчанию используется значение "LRS_ESP".
#
# dont_scan_volumes "Recovery HD"

# Каталоги, которые НЕ должны сканироваться на наличие загрузчиков. По умолчанию rEFInd не сканирует свой собственный каталог, каталог EFI/tools, каталог EFI/memtest, каталог EFI/memtest86 или каталог com.apple.recovery.boot. Использование опции dont_scan_dirs позволяет вам "занести в черный список" другие каталоги; но не забудьте использовать "+" в качестве первого элемента, если вы хотите продолжить занесение существующих каталогов в черный список. Вы можете использовать эту опцию, чтобы не включать в меню EFI/boot/bootx64.efi, если это дубликат другого загрузчика, или исключить каталог, содержащий драйверы или утилиты, не относящиеся к загрузчику, предоставляемые производителем оборудования. Если каталог указан и здесь, и в also_scan_dirs, предпочтение отдается dont_scan_dirs. Обратите внимание, что этот черный список применяется ко ВСЕМ файловым системам, которые сканирует rEFInd, а не только к ESP, если только перед именем каталога не стоит имя файловой системы или уникальный GUID раздела, как в примере "myvol:EFI/somedir", чтобы исключить EFI/somedir из сканирования на томе myvol, но не на других томах.
#
# dont_scan_dirs ESP:/EFI/boot,EFI/Dell,EFI/memtest86

# Файлы, которые НЕ должны быть включены в загрузчик EFI (в первой строке). Если вы используете загрузчик, который полагается на вспомогательные программы или драйверы, устанавливаемые вместе с основным двоичным файлом, или если вы хотите внести определенные загрузчики в "черный список" по имени, а не по местоположению, используйте эту опцию. Обратите внимание, что это НЕ предотвратит появление некоторых двоичных файлов во втором ряду инструментов. В частности, различные инструменты Secure Boot и восстановления присутствуют в этом списке, но могут отображаться как элементы второго ряда. Файл может быть указан как голое имя (например, "notme.efi"), как полное имя пути (например, "/EFI/somedir/notme.efi") или как полное имя пути с томом (например, "SOMEDISK:/EFI/somedir/notme.efi" или 2C17D5ED-850D-4F76-BA31-47A561740082:/EFI/somedir/notme.efi"). Теги ОС, скрытые с помощью клавиши Delete или '-' в меню rEFInd, добавляются в этот список, но сохраняются в NVRAM. По умолчанию используются shim.efi, shim-fedora.efi, shimx64.efi, PreLoader.efi, TextMode.efi, ebounce.efi, GraphicsConsole.efi, MokManager.efi, HashTool.efi, HashTool-signed.efi, bootmgr.efi, fb{arch}.efi (где "{arch}" - код архитектуры, например "x64"). Если вы хотите сохранить эти значения по умолчанию, но добавить их, обязательно укажите "+" в качестве первого элемента нового списка; в противном случае, скорее всего, появятся элементы из списка по умолчанию.
#
# dont_scan_files shim.efi,MokManager.efi

# Переменные загрузки EFI NVRAM, которые НЕ должны быть представлены в качестве загрузчиков, когда "firmware" является опцией к "scanfor". Представленный здесь список, разделенный запятыми, содержит строки, которые сопоставляются с полем описания - если значение здесь является нечувствительной к регистру подстрокой описания опции загрузки, то оно будет исключено из списка загрузки. Чтобы указать строку, содержащую пробел, заключите ее в кавычки. Указание "shell" будет препятствовать автоматическому включению встроенных оболочек EFI.
#
# dont_scan_firmware HARDDISK,shell,"Removable Device"

# Сканирует ядра Linux, у которых отсутствует расширение имени файла ".efi". Это полезно для лучшей интеграции с дистрибутивами Linux, которые предоставляют ядра с загрузчиками EFI, но не дают этим ядрам имена файлов, заканчивающиеся на ".efi", особенно если ядра хранятся в файловой системе, которую EFI может читать. При установке значения "1", "true" или "on" эта опция заставляет все файлы в сканируемых каталогах с именами, начинающимися с "vmlinuz", "bzImage" или "kernel", быть включенными в качестве загрузчиков, даже если они не имеют расширения ".efi". Передача этой опции значения "0", "false" или "off" приводит к тому, что ядра без расширений ".efi" НЕ сканируются. 
# По умолчанию "true" - сканирование ядер без расширений ".efi".
#
# scan_all_linux_kernels false

# Поддерживайте загрузчики, сжатые с помощью gzip. На платформах x86 и x86-64 ядра Linux самораспаковываются. На ARM64 файлы ядра Linux обычно сжимаются с помощью gzip, включая загрузчик заглушки EFI. Это делает их недоступными для загрузки в rEFInd, если только rEFInd сам не распакует их. Эта опция позволяет rEFInd сделать это. Эта функция не нужна в системах x86 и x86-64. 
# По умолчанию "false" для x86 и x86-64; "true" для ARM64.
#
# support_gzipped_loaders true

# Объединить все ядра Linux в заданном каталоге в одну запись. При такой настройке по умолчанию будет запущено ядро с самой последней временной меткой, а его имя файла появится в описании записи. Чтобы запустить другие ядра, пользователь должен нажать F2 или Insert; альтернативные ядра появляются в качестве опций в подменю. 
# По умолчанию установлено значение "true" - ядра "складываются" в один пункт меню.
#
# fold_linux_kernels false

# Список строк через запятую, которые следует рассматривать как числа для определения номера версии ядра. Эти строки сопоставляются по принципу "первый встречный"; то есть, если вы хотите рассматривать "linux-lts" и "linux" как строки версий, они ДОЛЖНЫ быть указаны как "linux-lts,linux", поскольку если вы укажете это иначе, и vmlinuz-linux, и vmlinuz-linux-lts вернутся с "linux" в качестве "строки версии", что не то, что вы бы хотели. Кроме того, если файл ядра или initrd содержит как указанную строку, так и цифры, "строка версии" включает и то, и другое. Например, "vmlinuz-linux-4.8" даст строку версии "linux-4.8". Эта опция предназначена для Arch и других дистрибутивов, которые не включают номера версий в имена файлов ядра, но могут предоставлять другие уникально идентифицирующие строки для нескольких ядер. Если эта возможность вызывает проблемы (например, если имя файла ядра включает "linux", а имя файла initrd - нет), убедитесь, что она установлена в пустую строку (extra_kernel_version_strings "") или закомментируйте опцию, чтобы отключить ее. 
# По умолчанию нет дополнительных строк версий
#
# extra_kernel_version_strings linux-lts,linux

# Запись в переменные EFI systemd (в настоящее время только LoaderDevicePartUUID) при запуске Linux через EFI-загрузчик, ELILO или GRUB. Эта переменная, если она присутствует, заставляет systemd монтировать ESP в /boot или /efi *если* любой из этих каталогов пуст и туда не смонтировано ничего другого. 
# По умолчанию "false".
#
# write_systemd_vars true

# Загрузчики с симлинками будут обрабатываться, если этот параметр установлен в true. По умолчанию они игнорируются, поскольку могут привести к нежелательным последствиям. Однако этот маркер может быть полезен в установках Linux, которые предоставляют символические ссылки в сканируемых местах, указывающие на ядра в несканируемых местах, как, например, некоторые установки openSUSE.
#
# follow_symlinks true

# Установите максимальное количество тегов, которые могут быть отображены на экране в любой момент времени. Если обнаружено большее количество загрузчиков, чем это значение, rEFInd отображает подмножество в прокручивающемся списке. Если это значение слишком велико для экрана, оно уменьшается до значения, с которым экран может справиться. Если это значение установлено в 0 (по умолчанию), оно уменьшается до числа, с которым может справиться экран.
#
# max_tags 0

# Установка выбора меню по умолчанию.  Доступные аргументы соответствуют клавиатурным ускорителям, доступным в rEFInd.  Вы можете выбрать загрузчик по умолчанию, используя:
#  - Цифру от 1 до 9, в этом случае по умолчанию N-й загрузчик в меню.
#  - Любая подстрока, соответствующая части названия загрузчика (обычно это имя ОС, путь к загрузчику,название тома или файловой системы). 
#  - Символ "+" в начале строки, который ссылается на самый недавно загруженный загрузчик.
# Вы также можете указать несколько селекторов, разделив их запятыми и заключив список в кавычки. (Параметр "+" имеет смысл только в этом контексте). Если после селектора(ов) указано два времени в 24-часовом формате, то значение по умолчанию будет применяться только между этими временами. Время указывается в стандарте времени материнской платы, будь то UTC или местное время, поэтому если вы используете UTC, вам нужно будет вручную скорректировать его по местному времени. Время может охватывать полночь, как в "23:30 00:30", что относится к периоду с 23:30 вечера до 12:30 ночи. Вы можете указать несколько строк default_selection, в этом случае приоритет имеет последняя из них. Таким образом, вы можете задать основной параметр без времени, а затем один или несколько, включающих время, чтобы установить разные значения по умолчанию для разного времени суток. Поведение по умолчанию - загрузка ранее загруженной ОС.
#
# default_selection 1
# default_selection Microsoft
# default_selection "+,bzImage,vmlinuz"
# default_selection Maintenance 23:30 2:00
# default_selection "Maintenance,macOS" 1:00 2:30

# Включите бит VMX и заблокируйте MSR процессора, если он разблокирован. На некоторых компьютерах Intel Apple прошивка не блокирует MSR 0x3A. Симптомом в Windows является неработающая Hyper-V, даже если процессор соответствует минимальным требованиям (виртуализация с поддержкой HW и SLAT) НЕ УСТАНАВЛИВАЙТЕ ЭТО, ЗА ИСКЛЮЧЕНИЕМ ЦПУ INTEL, ПОДДЕРЖИВАЮЩИХ VMX! См. http://www.thomas-krenn.com/en/wiki/Activating_the_Intel_VT_Virtualization_Feature для получения дополнительной информации по этому вопросу. 
# По умолчанию установлено значение false: Не пытаться включить и заблокировать MSR.
#
# enable_and_lock_vmx false

# Сообщите EFI компьютера Mac, что macOS вот-вот будет запущена, даже если это не так. Эта опция заставляет некоторые компьютеры Mac инициализировать оборудование иначе, чем при обычном запуске сторонней ОС. В некоторых случаях (особенно на компьютерах Mac с несколькими видеокартами) использование этой опции может привести к работе оборудования, которое в противном случае не работало бы. С другой стороны, использование этой опции, когда в ней нет необходимости, может привести к тому, что аппаратное обеспечение (например, клавиатуры и мыши) станет недоступным. Поэтому не стоит включать этот параметр, если ваши ОС, отличные от Apple, работают корректно; включайте его только в том случае, если у вас возникли проблемы с некоторыми аппаратными устройствами. При необходимости обычно используется значение "10.9", но вы можете поэкспериментировать с другими значениями. Эта функция не влияет на компьютеры не-Apple. 
# TПо умолчанию значение неактивно (подмена macOS не выполняется).
#
# spoof_osx_version 10.9

# Установите значения CSR для функции Apple System Integrity Protection (SIP). Значения представляют собой двухбайтовые (четырехсимвольные) шестнадцатеричные числа. Эти значения определяют, какие именно функции безопасности будут включены. Ниже приведены коды, обозначающие значения. Сложите их (в шестнадцатеричном виде!), чтобы задать новые значения. Команды Apple "csrutil enable" и "csrutil disable" устанавливают значения 10 и 877, соответственно. (До OS 11 использовалось 77, а не 877; 877 требуется для OS 11, и должно работать и для OS X 10.x).
#   CSR_ALLOW_UNTRUSTED_KEXTS            0x0001
#   CSR_ALLOW_UNRESTRICTED_FS            0x0002
#   CSR_ALLOW_TASK_FOR_PID               0x0004
#   CSR_ALLOW_KERNEL_DEBUGGER            0x0008
#   CSR_ALLOW_APPLE_INTERNAL             0x0010
#   CSR_ALLOW_UNRESTRICTED_DTRACE        0x0020
#   CSR_ALLOW_UNRESTRICTED_NVRAM         0x0040
#   CSR_ALLOW_DEVICE_CONFIGURATION       0x0080
#   CSR_ALLOW_ANY_RECOVERY_OS            0x0100
#   CSR_ALLOW_UNAPPROVED_KEXTS           0x0200
#   CSR_ALLOW_EXECUTABLE_POLICY_OVERRIDE 0x0400
#   CSR_ALLOW_UNAUTHENTICATED_ROOT       0x0800
# csr_values 10,877

# Включите вторичный файл конфигурации в этот файл. Этот вторичный файл загружается так, как если бы его параметры появились в точке самого маркера "include", поэтому, если вы хотите отменить настройки в главном файле, вторичный файл должен быть упомянут после настроек, которые вы хотите отменить. Обратите внимание, что вторичный файл НЕ может загружать третичный файл.
#
# include manual.conf

# Образцы строк конфигурации руководства. Каждая начинается с ключевого слова "menuentry", за которым следует имя, которое должно появиться в меню (используйте кавычки, если хотите, чтобы имя содержало пробел), и открытая фигурная скобка ("{"). Каждая строка заканчивается закрытой фигурной скобкой ("}"). Общие ключевые слова в каждой строфе включают:
#
#  volume    - определяет файловую систему, из которойзагружаютсяпоследующие файлы. Можно указать том пометкефайловой системы, по метке раздела или по GUID-номеру раздела (но еще НЕ по UUID-номеру файловой системы). 
#  loader    - определяет файл загрузчика 
#  initrd    - указывает файл начального RAM-диска 
#  icon      - указывает пользовательский значок загрузчика
#  ostype    - код типа ОС для определения вариантов загрузки, доступных при нажатии Insert.Допустимые значения: "MacOS", "Linux", "Windows" и "XOM".Чувствителен к регистру. 
#  graphics  - установите значение "on", чтобы включить загрузку в графическом режиме (полезно в основном для MacOS), или "off" для загрузки в текстовом режиме. По умолчанию определяется автоматически по имени файла загрузчика. 
#  options   - задает опции, которые будут передаваться загрузчику; используйте кавычки, если нужно передать более одной опции, или, если в опциях используются символы, которые могут быть изменены процедурами разбора rEFInd (=, /, , или tab).
#  disabled  - используйте отдельно или установите значение "yes", чтобы отключить эту запись.
#
# Обратите внимание, что в качестве разделителей каталогов можно использовать либо обратные косые черты (\) в стиле DOS/Windows/EFI, либо прямые косые черты (/) в стиле Unix. В любом случае все ссылки на файлы относятся к ESP, с которой был запущен rEFInd. Использование кавычек вокруг параметров приводит к тому, что они интерпретируются как одно ключевое слово, а разбор специальных символов (пробелы, =, /, и ) отключается. Это полезно в основном при использовании ключевого слова "options". Использование кавычек вокруг параметров, задающих имена файлов, допустимо, но тогда вы должны использовать обратные слеши вместо слешей, за исключением случаев, когда вы должны передать загрузчику прямой слеш, как при передаче опции root= ядру Linux.

# Ниже приведено несколько примеров загрузочных строф. Все они отключены по умолчанию. Найдите похожую на ту, что вам нужна, скопируйте ее, удалите строку "disabled" и откорректируйте записи в соответствии с вашими потребностями.

# Образец записи для ядра Linux 3.13 с поддержкой EFI boot stub на разделе с GUID 904404F8-B481-440C-A1E3-11A5A954E601. Эта запись включает в себя специфические для Linux параметры загрузки и указание начального RAM-диска. Обратите внимание на использование прямых слэшей в стиле Linux. Также обратите внимание, что ведущий слэш необязателен в спецификациях файлов.

menuentry Linux {
    icon EFI/refind/icons/os_linux.png
    volume 904404F8-B481-440C-A1E3-11A5A954E601
    loader bzImage-3.3.0-rc7
    initrd initrd-3.3.0.img
    options "ro root=UUID=5f96cafa-e0a7-4057-b18f-fa709db5b837"
    disabled
}

# Ниже приведен более сложный пример Linux, специально для Arch Linux. Этот пример ДОЛЖЕН быть изменен для вашей конкретной установки; если ничего другого нет, код PARTUUID должен быть изменен для вашего диска. Поскольку Arch Linux не включает номера версий в имена файлов ядра и initrd, вам может потребоваться использовать ручные загрузочные строки при использовании fallback initrds или нескольких ядер в Arch. Этот пример модифицирован из примера на вики-странице Arch, посвященной rEFInd (https://wiki.archlinux.org/index.php/rEFInd).

menuentry "Arch Linux" {
    icon     /EFI/refind/icons/os_arch.png
    volume   "Arch Linux"
    loader   /boot/vmlinuz-linux
    initrd   /boot/initramfs-linux.img
    options  "root=PARTUUID=5028fa50-0079-4c40-b240-abfaf28693ea rw add_efi_memmap"
    submenuentry "Boot using fallback initramfs" {
        initrd /boot/initramfs-linux-fallback.img
    }
    submenuentry "Boot to terminal" {
        add_options "systemd.unit=multi-user.target"
    }
    disabled
}

# Пример записи для загрузки Ubuntu с использованием стандартного имени загрузчика GRUB 2. Обратите внимание на использование прямых слэшей в стиле Linux

menuentry Ubuntu {
    loader /EFI/ubuntu/grubx64.efi
    icon /EFI/refind/icons/os_linux.png
    disabled
}

# Минимальная запись ELILO, которая, вероятно, не предлагает ничего такого, чего не может сделать автоопределение.

menuentry "ELILO" {
    loader \EFI\elilo\elilo.efi
    disabled
}

# Как и запись ELILO, эта запись не предлагает ничего такого, чего не могло бы сделать автоматическое обнаружение; но вы можете использовать ее, если хотите отключить автоматическое обнаружение, но при этом загрузить Windows.....

menuentry "Windows 7" {
    loader \EFI\Microsoft\Boot\bootmgfw.efi
    disabled
}

# Оболочки EFI - это такие же программы, как и загрузчики, и запускаются они точно так же. В строке "options" можно передать оболочке имя скрипта, который она должна запустить. Сценарий может инициализировать оборудование, а затем запустить ОС, или же он может делать что-то совершенно другое.

menuentry "Windows via shell script" {
    icon \EFI\refind\icons\os_win.png
    loader \EFI\tools\shell.efi
    options "fs0:\EFI\tools\launch_windows.nsh"
    disabled
}

# Обычно MacOS определяется и запускается автоматически, но если вы хотите сделать что-то необычное, то можно воспользоваться ручной строфой загрузки. В этой строке нет ничего необычного, но она может послужить отправной точкой. Обратите внимание, что для работы этого примера вам почти наверняка потребуется изменить строку "volume".

menuentry "My macOS" {
    icon \EFI\refind\icons\os_mac.png
    volume "macOS boot"
    loader \System\Library\CoreServices\boot.efi
    disabled
}

# Маркер firmware_bootnum принимает HEXADECIMAL-значение в качестве опции и устанавливает это значение с помощью переменной EFI BootNext, а затем перезагружает компьютер. После этого происходит однократная загрузка компьютера с использованием этого параметра загрузки EFI. Его можно использовать для различных целей, но одна из них, которая, вероятно, заинтересует некоторых пользователей rEFInd, заключается в том, что некоторые компьютеры Mac с дисплеями HiDPI при загрузке через rEFInd выдают рабочие столы с более низким разрешением, чем при загрузке через собственный менеджер загрузки Apple. Загрузка с использованием опции firmware_bootnum дает лучшее разрешение. Обратите внимание, что в этом типе конфигурации не используется опция загрузчика.

menuentry "macOS via BootNext" {
    icon /EFI/refind/icons/os_mac.png
    firmware_bootnum 80
    disabled
}
